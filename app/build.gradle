plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.yechaoa.plugin.gradleX'
}

/**
 * 想看printDependencies效果：
 * 1.先执行./gradlew publish发布本地
 * 2.再解开这里和上面插件的注释 //id 'com.yechaoa.plugin.gradleX'
 * 3.还有project > build.gradle里面的classpath
 */
gradleX {
    printDependencies = false
    analysisSo = true
}

/**
 * task 示例抽出去 解开注释可看效果
 */
//apply from : '../task.gradle'

/**
 * plugin 示例抽出去 解开注释可看效果
 */
//apply from : '../plugin.gradle'

def getVersionNameByProperty() {
    def name
    if (hasProperty("VersionName") && getProperty('VersionName') != null) {
        name = getProperties().get('VersionName')
    } else {
        name = "2.0-default"
    }
    return name
}

def getVersionCodeByProperty() {
    def code
    if (hasProperty("VersionCode") && getProperties().get('VersionCode') != null) {
        code = getProperties().get('VersionCode')
    } else {
        code = 2
    }
    return code
}

android {
    namespace 'com.yechaoa.gradlex'
    compileSdk 32

    defaultConfig {
        applicationId "com.yechaoa.gradlex"
        minSdk 23
        targetSdk 32
        versionCode getVersionCodeByProperty()
        versionName getVersionNameByProperty()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'armeabi-v8a'
        }
    }

    applicationVariants.configureEach { variant ->
        variant.outputs.each { output ->
            if (variant.buildType.name == "debug") {
                output.versionNameOverride = "3.0"
                output.versionCodeOverride = 3
            }
        }
    }

    buildTypes {
        debug {
            versionNameSuffix "-测试包"
        }
        release {
            versionNameSuffix "-正式包"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.aar'])

//    implementation project(":plugin")

    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation('com.squareup.retrofit2:retrofit:2.9.0')

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    if (project.hasProperty("isTest")) {
        println("---hasProperty isTest yes")
        if (Boolean.valueOf(getProperty('isTest'))) {
            println("---isTest true")
        } else {
            println("---isTest false")
        }
    } else {
        println("---hasProperty isTest no")
    }

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //音视频终端 SDK
    //8.全功能：直播推流（含超低延时直播、RTC连麦）＋短视频＋播放器＋美颜特效
    implementation 'com.aliyun.aio:AliVCSDK_Premium:6.4.0'


    // 看Gradle源码用
//    implementation "com.android.tools.build:gradle:7.4"
}


/**
 * 强制依赖版本
 * 示例：com.squareup.okhttp3:okhttp:4.10.0
 */
configurations.all {
    // 开启版本冲突编译直接报错模式...
//    resolutionStrategy{
//        failOnVersionConflict()
//    }

    // 版本冲突解析策略
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.squareup.okhttp3' && requested.name == 'okhttp') {
            details.useVersion '4.10.0'
        }
        // 还可以使用startsWith通配，比如room-compiler、room-rxjava2、room-testing
//        if (requested.group == 'androidx.room' && requested.name.startsWith('room')) {
//            details.useVersion '2.5.0'
//        }
    }
}